
{
    
    
    
    
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
    "articles": [{"date":"2017-11-07","image":"","imageAlt":"","link":"http://localhost:1313/post/programming/go/go-slice-array/","summary":"go语言中array与slice的区别总结","tags":["array","Go","slice"],"title":"GO语言中array与slice的比较"},{"date":"2017-10-31","image":"","imageAlt":"","link":"http://localhost:1313/post/technology/docker/","summary":"1. 配置docker repository 2. Docker image image（镜像）保存docker中的可运行系统的数据，当运行时docker把image加载到container（容器）中运行。\n2.1 获取docker image 命令： docker pull Docker Registry: 地址的格式一般是 \u0026lt;域名/IP\u0026gt; :端口号 ，默认是docker hub。 仓库名：格式\u0026lt;用户名\u0026gt;/\u0026lt;软件名\u0026gt;，默认是Docker hub的\u0026quot;Library\u0026quot;。 2.2 查询image 命令：docker images 2.3 删除镜像 命令： docker rmi\n但有时候会发现无法删除，原因可能是因为这个镜像可能被某个容器使用，即使是这个容器处于停止的状态也无法删除，这种时候可以先查询所有的容器信息，然后删除对应的容器再删除镜像，例如下面的例子：\n3. Container（容器） 首先了解一下容器的生命周期：\n3.1 创建一个容器 create命令用来创建一个容器，但不运行：\n3.2 直接启动一个Conainer(容器)并运行指定的image(镜像) 命令：docker run\ndocker run \u0026lt;仓库名\u0026gt;:\u0026lt;标签\u0026gt; 或 docker run \u0026lt;Image ID\u0026gt; 例子：\n-d：后台运行 -p：指定端口： -p port：把容器的port端口发布到host的随机端口 -p host_port:port：把容器的port发布到host的host_port端口 -p host_ip:host_port:port：把容器的port端口发布到主机的host_ip:host_port上 -P：发布容器的所有端口到主机的随机端口上 -it：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端。我们这里打算进入 bash 执行一些命令并查看返回结果，因此我们需要交互式终端。 -v：指定卷 -v volume_path：启动容器并指定volume_path为卷 -v host_path:volume_path：启动容器并将volume_path映射到host的host_path上 \u0026ndash;volume-from：从别的容器中加载卷 \u0026ndash;rm：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 docker rm。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 \u0026ndash;rm 可以避免浪费空间。","tags":["Docker"],"title":"Docker"},{"date":"2017-10-06","image":"","imageAlt":"","link":"http://localhost:1313/post/hardware/mac_book_air_change_battery/","summary":"家里的Macbook Air年事已高电池也充不了电了，而且最近电池鼓包已经影响到了触摸板的使用，趁着假期买了块国产电池换上去。","tags":["Battery","MacbookAir","换电池"],"title":"Macbook Air换电池记"},{"date":"2017-10-02","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/neuralnetwork/softmax/","summary":"sigmoid激活函数在神经网络中有着强大的通用性，但也存在这一些问题，softmax输出层提供了一种解决这些问题比较有效的方法，本文对softmax输出层进行一些推导体会。","tags":["matploblib","NeuralNetwork","numpy","python","sigmoid","softmax"],"title":"softmax输出层公式推导及代码实验"},{"date":"2017-09-25","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/neuralnetwork/bp-experiment/","summary":"之前使用神经网络算法的时候并没有认真总结关键的算法，虽然可以用但总觉得不爽，于是这两天对神经网络算法中的反向传播（Back Propagation）进行了推导。即理解了算法的数学本质，也对神经网络算法的工程特性有了深刻体会，工程算法真的是以解决问题为驱动的，追求的是解决问题的实用性。","tags":["BackPropagation","BP","反向传播"],"title":"神经网络之反向传播算法"},{"date":"2017-09-14","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/tensorflow/tensorflow_on_jetson2/","summary":"系统环境 Jetpack：v3.0 CUDA：8.0 cuDNN：5.1.10 编译安装bazel bazel是google开发的一套开发管理工具，功能类似makefile和maven，特点是速度快，编译tensorflow时需要用到这个工具。\n在TX2上安装bazel需要对bazel源代码做一点修改以支持该平台。下载代码后修改文件 \u0026ldquo;bazel/src/main/java/com/google/devtools/build/lib/util/CPU.java\u0026rdquo;，修改如下：\npublic enum CPU { X86_32(\u0026quot;x86_32\u0026quot;, ImmutableSet.of(\u0026quot;i386\u0026quot;, \u0026quot;i486\u0026quot;, \u0026quot;i586\u0026quot;, \u0026quot;i686\u0026quot;, \u0026quot;i786\u0026quot;, \u0026quot;x86\u0026quot;)), X86_64(\u0026quot;x86_64\u0026quot;, ImmutableSet.of(\u0026quot;amd64\u0026quot;, \u0026quot;x86_64\u0026quot;, \u0026quot;x64\u0026quot;)), PPC(\u0026quot;ppc\u0026quot;, ImmutableSet.of(\u0026quot;ppc\u0026quot;, \u0026quot;ppc64\u0026quot;, \u0026quot;ppc64le\u0026quot;)), - ARM(\u0026quot;arm\u0026quot;, ImmutableSet.of(\u0026quot;arm\u0026quot;, \u0026quot;armv7l\u0026quot;)), + ARM(\u0026quot;arm\u0026quot;, ImmutableSet.of(\u0026quot;arm\u0026quot;, \u0026quot;armv7l\u0026quot;, \u0026quot;aarch64\u0026quot;)), S390X(\u0026quot;s390x\u0026quot;, ImmutableSet.of(\u0026quot;s390x\u0026quot;, \u0026quot;s390\u0026quot;)), UNKNOWN(\u0026quot;unknown\u0026quot;, ImmutableSet.\u0026lt;String\u0026gt;of()); 修改好之后在代码目录运行 \u0026ldquo;compile.sh\u0026rdquo; 进行编译，编译好后将程序拷贝到执行环境：\n$ sudo cp output/bazel /usr/local/bin 安装tensorflow 下载tensorflow源码 写这篇文章的时候tensorflow已经发展到了v1.3，下载release版本代码：\n$ wget https://github.com/tensorflow/tensorflow/archive/v1.3.0.tar.gz 编译tensorflow 配置configure 首先configure编译环境：\nnvidia@tegra-ubuntu:~/tensorflow/tensorflow-1.3.0$ ./configure You have bazel 0.4.5- installed. Please specify the location of python.","tags":["Jetson","nvidia","tensorflow","TX2"],"title":"在 Nvidia Jetson TX2 上编译安装tensorflow"},{"date":"2017-09-06","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/math/variance_covariance/","summary":"最近在学习机器学习的过程中发现了许多上学时在概率论和统计学课上学过的知识点，可是年代久远已经都忘记了，重新学起来还是费了不少力气，不过因为带着目的学习所以也有了一些新的认识。","tags":["协方差","协方差矩阵","数学期望","方差","标准差"],"title":"数学期望、方差、标准差、协方差"},{"date":"2017-09-01","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/machine_learning_chart/","summary":"看到几张描绘近几年来机器学习领域的行业版图","tags":["Machine Learning"],"title":"The Current State of Machine Intelligence (from Shivon Zilis)"},{"date":"2017-08-31","image":"","imageAlt":"","link":"http://localhost:1313/post/network/scrapy/","summary":"这是个description","tags":["crawl","scrapy","京东","爬虫"],"title":"用scrapy爬取京东商品信息"},{"date":"2017-08-17","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/neuralnetwork/neural_network_drive/","summary":"最近学习了下神经网络，于是写了一个开车的小游戏，然后训练了一个6层神经网络自己驾驶练练手。 代码实现主要用了pygame和numpy，网络有7个输入分别对应小车前面的7个距离探头数据，2个输出进行转向输出。","tags":["NeuralNetwork","numpy","pygame","神经网络"],"title":"神经网络实践：自动驾驶"}],
    "test": "基于 Kalman filter 的目标跟踪   在 Apple silicon (M3 Max) 上对 Llama2 进行微调   tmux AI 助手   使用 ros::waitForShutdown() 导致 dynamic_reconfigure::Server 无法正常获取配置更新的问题   django-rest-framework 和 simplejwt 的类关系   PCL 点云数据过滤处理   Python 内存管理   Wechat_development   左乘/右乘旋转   多媒体格式标准、H264 编码与 MP4 格式简要介绍   摄像机模型及实现   旋转矩阵   NLP 资源整理   ssh代理方法   机器学习笔记 - 贝叶斯分类法推导   VMware ESXi 6.7.0 update2 使用 GPU Passthrough 模式的坑   Firefox cache2 数据结构解析   哈希计算图片相似性   机器学习 - 决策树   模型评估指标   机器学习资料收集   阿里ECS服务器使用腾讯企业邮箱发送SMTP邮件的问题   解决flask_restful无法对Decimal类型数据进行序列化问题   Build Tensorflow v1.7 on NVIDIA Jetson tx2   说一说反弹shell   使用Python的Selenium驱动浏览器行为   自动饮水机   使用Nvidia Jetson TX2挖以太币   python2 和 python3 的一些区别   Mysql charset/collation字符编码设置   在区块链上存储信息   Spark开发   Hive Intro   Hcatalog简介   Yarn Config   Sqoop介绍及使用   Nginx Static   Horwonworks HDP 2.6安装过程   golang UDP中Read()/ReadFromUDP()/Write()/WriteToUDP()的使用   GO语言依赖管理那些事儿   Beego开发入门   Git Submodule使用方法   Vim 8 Mac   Hyperledger Intro   Django静态文件配置   Go语言编程陷阱   GO开发技巧   Temp Sensor Comparasion   使用vim进行16进制编辑   Go语言中new与make的比较   GO语言中array与slice的比较   Docker   Macbook Air换电池记   softmax输出层公式推导及代码实验   神经网络之反向传播算法   在 Nvidia Jetson TX2 上编译安装tensorflow   数学期望、方差、标准差、协方差   The Current State of Machine Intelligence (from Shivon Zilis)   用scrapy爬取京东商品信息   神经网络实践：自动驾驶   图像卷积实践   python中__main__的作用域及变量使用   nmap NSE脚本中host/port的内容   esp8266_sprint_float   esp8266启动模式 - 如何理解'rst cause:2, boot mode:(3,6)'   在ESP 8266 nodeMCU上运行MQTT   如何在CentOS上部署shadowsocks服务   使用Arduino IDE进行nodeMCU开发   在Mac OS上设置ESP 8266开发环境   numpy学习笔记[1]   postgres数据库使用指南   tensorflow playground   玩转阿波罗11号飞船导航计算机模拟器   阿里云ECS EIP服务进行IPv6改造的方法   一行代码让你的字符终端下起雪来！   搭建SoftEther VPN 服务   使用nginx搭建hugo静态blog服务         Manifest   Search   SearchEngine   ",
    "page": "6",
    "next": 
        "http://localhost:1313/page/7/index.json"
    
}

