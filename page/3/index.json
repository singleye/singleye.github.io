
{
    
    
    
    
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
    "articles": [{"date":"2019-03-23","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/resources/","summary":"\u003c!-- raw HTML omitted --\u003e","tags":["Machine Learning"],"title":"机器学习资料收集"},{"date":"2019-01-19","image":"","imageAlt":"","link":"http://localhost:1313/post/devops/ecs-exmail-issue/","summary":"在阿里ECS上搭建的服务需要使用腾讯企业邮箱发送团队邮件，结果发现使用腾讯官方SMTP服务器配置方法无法发送成功，最后发现需要使用 587 端口才可以，这一点在官方文档里根本看不到，真是不得不吐槽啊！","tags":["ecs","exmail"],"title":"阿里ECS服务器使用腾讯企业邮箱发送SMTP邮件的问题"},{"date":"2019-01-16","image":"","imageAlt":"","link":"http://localhost:1313/post/network/web/flask/json-decimal/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e在使用flask进行开发的时候发现 \u003cstrong\u003eDecimal\u003c/strong\u003e 类型的数据无法在作为 JSON 通过相应消息体序列化返回，出现 \u003cstrong\u003ejsonschema.exceptions.ValidationError\u003c/strong\u003e 错误：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejsonschema.exceptions.ValidationError: \u0026#39;1000.00\u0026#39; is not of type \u0026#39;number\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e","tags":["flask","flask_restful","JSON decimal"],"title":"解决flask_restful无法对Decimal类型数据进行序列化问题"},{"date":"2018-04-12","image":"","imageAlt":"","link":"http://localhost:1313/post/machinelearning/tensorflow/build_v1.7_on_tx2/","summary":"\u003c!-- raw HTML omitted --\u003e","tags":["Jetson","Machine Learning","Tensorflow","TX2"],"title":"Build Tensorflow v1.7 on NVIDIA Jetson tx2"},{"date":"2018-04-09","image":"","imageAlt":"","link":"http://localhost:1313/post/network/reverse_shell/","summary":"\u003c!-- raw HTML omitted --\u003e","tags":["ReverseShell","反弹shell"],"title":"说一说反弹shell"},{"date":"2018-03-30","image":"","imageAlt":"","link":"http://localhost:1313/post/network/web/selenium/","summary":"\u003c!-- raw HTML omitted --\u003e","tags":["chromedriver","geckodriver","selenium"],"title":"使用Python的Selenium驱动浏览器行为"},{"date":"2018-03-20","image":"","imageAlt":"","link":"http://localhost:1313/post/hardware/smart-water-machine/","summary":"Youtube观看：\nYouku观看:","tags":["ESP8266","RC522","RFID",8266],"title":"自动饮水机"},{"date":"2018-03-11","image":"","imageAlt":"","link":"http://localhost:1313/post/technology/blockchain/ethereum-mining/","summary":"现在加密货币在全世界都到了很疯狂的程度了，经常听说挖矿，那么挖矿究竟是怎么回事呢，到底怎么进行挖矿呢？这里介绍一下以太币挖矿的那些事儿。\n进行挖矿大概需要几个步骤：\n注册钱包 加入矿池 准备挖矿工具 开挖 下面详细介绍一下如何进行挖矿。\n获取以太币钱包地址 使用myetherwallet 挖矿前首先需要创建自己的钱包，可以到“myetherwallet”(https://www.myetherwallet.com)进行创建。\n第一步：输入密码，点击“Create New Wallet”： 第二步：保存\u0026quot;Keystore\u0026quot;密钥，密钥文件一定要小心保存，如果丢失了那么钱包就永远也找不回来了。另外最好使用物理隔离，可以存在U盘上需要用的时候再拿出来，或者干脆打印出来，如果密码被盗窃那所有的以太币就不保了 :P\n之后为了方便管理可以使用chrome浏览器的\u0026quot;\u0026ldquo;插件进行创建。\n使用MetaMask 还有一个更方便的创建钱包的方法，就是使用chrome浏览器的\u0026quot;MetaMask\u0026quot;插件进行创建和管理。 需要提醒一下，创建成功后一定要保护好创建钱包的那12个单词，这是唯一的恢复账号的方法！\n使用\u0026quot;MetaMask\u0026quot;跟myetherwallet不太一样的一点是，在创建出钱包的密钥是通过\u0026quot;MetaMask\u0026quot;进行管理的，这种方法有好有坏，好处是使用方便，坏处是一旦MetaMask挂了或者被黑的话，那么你的钱包也会受到牵连。\n选择矿池 有了钱包地址后需要加入矿池才有资格成为一名真正的矿工，截止2018-03-11，全世界的矿池总算力已经达到了259.27 TH/s\n（数据来自Top Miners）\n国内用户可以选择国内的矿池：\n矿池 地址 矿池 起付点 费率 f2pool https://www.f2pool.com eth.f2pool.com:8008eth.f2pool.com:8080 0.1 ETH 3% ethfans https://eth.ethfans.org/#/ huabei-pool.ethfans.org:3333huabei-pool.ethfans.org:13333guangdong-pool.ethfans.org:3333guangdong-pool.ethfans.org:13333 0.05 ETH 1% 选择挖矿软件 现在开好户签好合同了，矿工要开始干活了 :-)\n家里唯一有个靠谱GPU的机器就是我的小Jetson了，之前学习机器学习时候买的小平台，这下要从码农变身矿工了。\n常用的挖矿软件有两个：\n软件 CPU GPU CUDA OpenCL ethminer No Yes, ver \u0026gt; 9.0 Yes Yes geth Yes Yes Yes Yes 我为Jetson选择了ethminer，这个工具需要在Linux上编译一下：\n编译ethminer 开始前需要说一下，由于Jetson不支持OpenCL（Nvidia官方裁剪了系统 -__-凸），因此要在Jetson上使用ethminer的话就要直接使用CUDA，而且版本需要大于9.","tags":["ethereum","ethminer","Jetson","TX2","以太币"],"title":"使用Nvidia Jetson TX2挖以太币"},{"date":"2018-02-26","image":"","imageAlt":"","link":"http://localhost:1313/post/programming/python/python3/","summary":"python2与python3的区别 区别点 python2 python3 write() 可以直接写utf8内容 写utf8内容碰到：TypeError: write() argument must be str, not bytes解决方法：open(file, \u0026lsquo;wb\u0026rsquo;) super() super(CLASS_NAME, self).method() super().method() / 除法运算，结果取整数 除法运算，结果为浮点数，取证书使用“//” dict has_key()可以用来查询是否存在某个键 has_key()方法不存了，使用\u0026rsquo;key in dictionary\u0026rsquo;来查询(python2也支持该方法) python3的新特性 新特性 描述 参考 @ 矩阵乘法运算符，目前还没有定义built-in的矩阵数据类型 PEP 465 - A dedicated infix operator for matrix multiplication / 除法运算，结果浮点数 // 除法运算，结果取整数 ","tags":["python3"],"title":"python2 和 python3 的一些区别"},{"date":"2018-01-23","image":"","imageAlt":"","link":"http://localhost:1313/post/database/mysql_charset_collation/","summary":"mysql在创建数据库时有两个跟字符编码相关的参数\u0026quot;character set\u0026quot;和\u0026quot;collate\u0026quot;，这里解释一下这两个参数的作用。\ncharacter set **“character set”**很容易解释，就是指定字符在存储到mysql中时使用的编码集。数据库支持哪些编码可以通过\u0026quot;show character set\u0026quot;获得。\ncollate 这个参数指定mysql根据哪些规则来比较存储的数据的字符集，这些信息可以用来进行数据的比较排序。\n这个参数的格式构成规则如下：\n\u0026ldquo;\u0026lt;字符集\u0026gt;_\u0026lt;语言相关信息\u0026gt;_\u0026lt;后缀\u0026gt;\u0026rdquo;\n例如： \u0026ldquo;utf8_general_ci\u0026rdquo;, \u0026ldquo;latin1_danish_ci\u0026rdquo;\nmysql一些其他特性 1. mysql支持4个级别的字符集设置：服务器，数据库，表，列。 1.1 服务器级别 作用： 服务器的字符集可以作为\u0026quot;CREATE DATABASE\u0026quot;的默认值\n设置方法： 启动参数： \u0026lsquo;\u0026ndash;character-set-server\u0026rsquo; \u0026lsquo;\u0026ndash;collation-server\u0026rsquo;\n查询： SHOW VARIABLES 查询 character_set_server/collation_server\n1.2 数据库级别 作用： 作为创建表时的默认值\n影响LOAD_DATA语句中的CHARACTER SET的值\n影响存储过程中与字符编码相关的操作\n设置方法： \u0026lsquo;CREATE DATABASE\u0026rsquo;或\u0026rsquo;ALTER DATABASE\u0026rsquo; 的参数 \u0026lsquo;CHARACTER SET\u0026rsquo; \u0026lsquo;COLLATE\u0026rsquo;\n查询： USE db_name;SELECT @@character_set_database, @@collation_database;\n1.3 表级别 作用： 每张表可以有表级别的字符集。\n设置方法： 使用 CREATE TABLE 和 ALTER TABLE 命令进行设置。\n查询： 1.4 列级别 作用： 字符类型的列（CHAR, VARCHAR, TEXT）可以有一个本列相关的 character set和collation设置。","tags":["charset","collate","DataBase","mysql"],"title":"Mysql charset/collation字符编码设置"}],
    "test": "基于 Kalman filter 的目标跟踪   在 Apple silicon (M3 Max) 上对 Llama2 进行微调   tmux AI 助手   使用 ros::waitForShutdown() 导致 dynamic_reconfigure::Server 无法正常获取配置更新的问题   django-rest-framework 和 simplejwt 的类关系   PCL 点云数据过滤处理   Python 内存管理   Wechat_development   左乘/右乘旋转   多媒体格式标准、H264 编码与 MP4 格式简要介绍   摄像机模型及实现   旋转矩阵   NLP 资源整理   ssh代理方法   机器学习笔记 - 贝叶斯分类法推导   VMware ESXi 6.7.0 update2 使用 GPU Passthrough 模式的坑   Firefox cache2 数据结构解析   哈希计算图片相似性   机器学习 - 决策树   模型评估指标   机器学习资料收集   阿里ECS服务器使用腾讯企业邮箱发送SMTP邮件的问题   解决flask_restful无法对Decimal类型数据进行序列化问题   Build Tensorflow v1.7 on NVIDIA Jetson tx2   说一说反弹shell   使用Python的Selenium驱动浏览器行为   自动饮水机   使用Nvidia Jetson TX2挖以太币   python2 和 python3 的一些区别   Mysql charset/collation字符编码设置   在区块链上存储信息   Spark开发   Hive Intro   Hcatalog简介   Yarn Config   Sqoop介绍及使用   Nginx Static   Horwonworks HDP 2.6安装过程   golang UDP中Read()/ReadFromUDP()/Write()/WriteToUDP()的使用   GO语言依赖管理那些事儿   Beego开发入门   Git Submodule使用方法   Vim 8 Mac   Hyperledger Intro   Django静态文件配置   Go语言编程陷阱   GO开发技巧   Temp Sensor Comparasion   使用vim进行16进制编辑   Go语言中new与make的比较   GO语言中array与slice的比较   Docker   Macbook Air换电池记   softmax输出层公式推导及代码实验   神经网络之反向传播算法   在 Nvidia Jetson TX2 上编译安装tensorflow   数学期望、方差、标准差、协方差   The Current State of Machine Intelligence (from Shivon Zilis)   用scrapy爬取京东商品信息   神经网络实践：自动驾驶   图像卷积实践   python中__main__的作用域及变量使用   nmap NSE脚本中host/port的内容   esp8266_sprint_float   esp8266启动模式 - 如何理解'rst cause:2, boot mode:(3,6)'   在ESP 8266 nodeMCU上运行MQTT   如何在CentOS上部署shadowsocks服务   使用Arduino IDE进行nodeMCU开发   在Mac OS上设置ESP 8266开发环境   numpy学习笔记[1]   postgres数据库使用指南   tensorflow playground   玩转阿波罗11号飞船导航计算机模拟器   阿里云ECS EIP服务进行IPv6改造的方法   一行代码让你的字符终端下起雪来！   搭建SoftEther VPN 服务   使用nginx搭建hugo静态blog服务         Manifest   Search   SearchEngine   ",
    "page": "3",
    "next": 
        "http://localhost:1313/page/4/index.json"
    
}

