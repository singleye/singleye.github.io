<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Esp8266 on 好奇心是探索未知世界的钥匙</title>
    <link>https://www.singleye.net/categories/esp8266/</link>
    <description>Recent content in Esp8266 on 好奇心是探索未知世界的钥匙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 20 Mar 2018 16:42:45 +0800</lastBuildDate>
    
	<atom:link href="https://www.singleye.net/categories/esp8266/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>自动饮水机</title>
      <link>https://www.singleye.net/2018/03/%E8%87%AA%E5%8A%A8%E9%A5%AE%E6%B0%B4%E6%9C%BA/</link>
      <pubDate>Tue, 20 Mar 2018 16:42:45 +0800</pubDate>
      
      <guid>https://www.singleye.net/2018/03/%E8%87%AA%E5%8A%A8%E9%A5%AE%E6%B0%B4%E6%9C%BA/</guid>
      <description>Youtube观看：
  Youku观看:
  </description>
    </item>
    
    <item>
      <title>esp8266_sprint_float</title>
      <link>https://www.singleye.net/2017/05/esp8266_sprint_float/</link>
      <pubDate>Fri, 12 May 2017 10:34:42 +0800</pubDate>
      
      <guid>https://www.singleye.net/2017/05/esp8266_sprint_float/</guid>
      <description>用C语言进行字符串格式化操作的时候经常会使用sprintf/snprintf这两个函数，但这两天在使用Arduino IDE进行8266开发的时候却碰到了一个浮点数字符串打印小问题。
问题代码
 char buffer[128]; float num = 1.0; ... memset(buffer, 0, sizeof(buffer)); snprintf(buffer, sizeof(buffer), “%f”, num); Serial.println(buffer);  实际运行并没有按照以往认为的方式将浮点数输出出来
 snprintf(buffer, sizeof(buffer), &amp;quot;%d.&amp;quot;);  </description>
    </item>
    
    <item>
      <title>在Mac OS上设置ESP 8266开发环境</title>
      <link>https://www.singleye.net/2017/04/%E5%9C%A8mac-os%E4%B8%8A%E8%AE%BE%E7%BD%AEesp-8266%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sat, 08 Apr 2017 00:10:24 +0800</pubDate>
      
      <guid>https://www.singleye.net/2017/04/%E5%9C%A8mac-os%E4%B8%8A%E8%AE%BE%E7%BD%AEesp-8266%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>做物联网产品开发有段时间了，虽然开发了两款智能产品，但hands-on的开发一直都在服务器和应用层进行，硬件层的研发并没有真的深入下去。决定有时间也对这个层面学习学习，软硬都能搞才算得上是全栈吧 :-P
要完成一个物联网产品的开发需要解决联网的问题。目前解决联网的比较常用的方案有Wi-Fi和GSM两种（NB-IOT也在上升势头，相信一年后会有较多的应用出现）。这次先学习下乐鑫ESP 8266 WI-FI芯片的开发。
由于我用的是Mac OS，所以就介绍如何在Mac上进行8266的环境设置。
安装使用esp-open-sdk 1.安装依赖关系
brew install gnu-sed --with-default-names brew tap homebrew/dupes brew install gperf brew install grep brew install autoconf brew install binutils brew install gawk brew install wget brew install automake brew install libtool brew install help2man  参考
2.准备case-sensitive分区
由于Mac OS的分区默认是case-insensitive的，而编译需要在case-sensitive的分区上进行，所以需要创建一个独立分区解决这个问题(linux系统上没有这个问题)。
hdiutil create ~/Desktop/eos.dmg -volname &amp;quot;esp-open-sdk&amp;quot; -size 10g -fs &amp;quot;Case-sensitive HFS+&amp;quot; hdiutil mount ~/Desktop/eos.dmg cd /Volumes/esp-open-sdk  3.编译esp-open-sdk
下载代码库，使用&amp;rsquo;&amp;ndash;recursive&amp;rsquo;会同时下载crosstool-NG／esp-open-lwip／esptool／lx106-hal子模块
git clone --recursive https://github.</description>
    </item>
    
  </channel>
</rss>