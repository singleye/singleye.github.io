<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KalmanFilter on singleye</title>
    <link>/tags/kalmanfilter/</link>
    <description>singleye (KalmanFilter)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>**Email:** [singleye512@gmail.com](mailto:singleye512@gmail.com) (singleye)</managingEditor>
    <webMaster>**Email:** [singleye512@gmail.com](mailto:singleye512@gmail.com) (singleye)</webMaster>
    <lastBuildDate>Thu, 06 Jun 2024 09:26:40 +0800</lastBuildDate>
    
    <atom:link href="/tags/kalmanfilter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基于 Kalman filter 的目标跟踪</title>
      <link>/2024/06/%E5%9F%BA%E4%BA%8E-kalman-filter-%E7%9A%84%E7%9B%AE%E6%A0%87%E8%B7%9F%E8%B8%AA/</link>
      <pubDate>Thu, 06 Jun 2024 09:26:40 +0800</pubDate>
      <author>**Email:** [singleye512@gmail.com](mailto:singleye512@gmail.com) (singleye)</author>
      <guid>/2024/06/%E5%9F%BA%E4%BA%8E-kalman-filter-%E7%9A%84%E7%9B%AE%E6%A0%87%E8%B7%9F%E8%B8%AA/</guid>
      <description>&lt;!--toc--&gt;
&lt;p&gt;&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/MachineLearning/object_tracking_kalman_filter/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用卡尔曼滤波进行目标跟踪的数学原理&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e4%bd%bf%e7%94%a8%e5%8d%a1%e5%b0%94%e6%9b%bc%e6%bb%a4%e6%b3%a2%e8%bf%9b%e8%a1%8c%e7%9b%ae%e6%a0%87%e8%b7%9f%e8%b8%aa%e7%9a%84%e6%95%b0%e5%ad%a6%e5%8e%9f%e7%90%86&#34;&gt;
        #
    &lt;/a&gt;
    使用卡尔曼滤波进行目标跟踪的数学原理
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;卡尔曼滤波器（Kalman Filter）是一种递归估计方法，广泛应用于目标跟踪中。其核心思想是在动态系统中利用先验信息、测量数据和系统模型来估计目标状态。卡尔曼滤波器特别适用于线性系统和高斯噪声环境。&lt;/p&gt;
&lt;h3 id=&#34;1-卡尔曼滤波的基本概念&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#1-%e5%8d%a1%e5%b0%94%e6%9b%bc%e6%bb%a4%e6%b3%a2%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5&#34;&gt;
        ##
    &lt;/a&gt;
    1. 卡尔曼滤波的基本概念
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;卡尔曼滤波器的工作过程可以分为两个阶段：预测（Prediction）和更新（Update）。在预测阶段，基于系统模型对下一个时刻的状态进行预测。在更新阶段，利用新的测量数据对预测结果进行修正。下面将详细介绍卡尔曼滤波器的数学原理。&lt;/p&gt;
&lt;h3 id=&#34;2-卡尔曼滤波的数学模型&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#2-%e5%8d%a1%e5%b0%94%e6%9b%bc%e6%bb%a4%e6%b3%a2%e7%9a%84%e6%95%b0%e5%ad%a6%e6%a8%a1%e5%9e%8b&#34;&gt;
        ##
    &lt;/a&gt;
    2. 卡尔曼滤波的数学模型
&lt;/div&gt;
&lt;/h3&gt;
&lt;h4 id=&#34;21-状态方程和测量方程&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#21-%e7%8a%b6%e6%80%81%e6%96%b9%e7%a8%8b%e5%92%8c%e6%b5%8b%e9%87%8f%e6%96%b9%e7%a8%8b&#34;&gt;
        ###
    &lt;/a&gt;
    2.1 状态方程和测量方程
&lt;/div&gt;
&lt;/h4&gt;
&lt;p&gt;卡尔曼滤波器假设系统的状态可以用以下线性差分方程来描述：&lt;/p&gt;
$$
\[
x_k = A x_{k-1} + B u_{k-1} + w_{k-1} 
\]
$$
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\( $x_k$ \) 是系统在时刻 \( $k$ \) 的状态向量。&lt;/li&gt;
&lt;li&gt;\( $A$ \) 是状态转移矩阵，描述了系统从时刻 \( $k-1$ \) 到时刻 \( $k$ \) 的状态转移关系。&lt;/li&gt;
&lt;li&gt;\( $B$ \) 是控制输入矩阵，描述了控制输入 \( $u_{k-1}$ \) 对系统的影响。&lt;/li&gt;
&lt;li&gt;\( $w_{k-1}$ \) 是过程噪声，假设其满足高斯分布，均值为零，协方差为 \( $Q$ \)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测量方程描述了测量值与系统状态之间的关系：&lt;/p&gt;
$$
\[ 
z_k = H x_k + v_k 
\]
$$
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\( $z_k$ \) 是时刻 \( $k$ \) 的测量向量。&lt;/li&gt;
&lt;li&gt;\( $H$ \) 是测量矩阵，描述了系统状态到测量值的映射关系。&lt;/li&gt;
&lt;li&gt;\( $v_k$ \) 是测量噪声，假设其满足高斯分布，均值为零，协方差为 \( $R$ \)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;22-卡尔曼滤波器的递归过程&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#22-%e5%8d%a1%e5%b0%94%e6%9b%bc%e6%bb%a4%e6%b3%a2%e5%99%a8%e7%9a%84%e9%80%92%e5%bd%92%e8%bf%87%e7%a8%8b&#34;&gt;
        ###
    &lt;/a&gt;
    2.2 卡尔曼滤波器的递归过程
&lt;/div&gt;
&lt;/h4&gt;
&lt;p&gt;卡尔曼滤波器的递归过程包括预测和更新两个阶段。&lt;/p&gt;
&lt;h5 id=&#34;预测阶段&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e9%a2%84%e6%b5%8b%e9%98%b6%e6%ae%b5&#34;&gt;
        ####
    &lt;/a&gt;
    预测阶段
&lt;/div&gt;
&lt;/h5&gt;
&lt;p&gt;在预测阶段，根据当前状态估计和控制输入，对下一时刻的状态进行预测：&lt;/p&gt;
$$ \hat{x}_{k|k-1} = A \hat{x}_{k-1|k-1} + B u_{k-1} $$
&lt;p&gt;同时，预测状态协方差：&lt;/p&gt;
$$
\[ 
P_{k|k-1} = A P_{k-1|k-1} A^T + Q 
\]
$$
&lt;h5 id=&#34;更新阶段&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e6%9b%b4%e6%96%b0%e9%98%b6%e6%ae%b5&#34;&gt;
        ####
    &lt;/a&gt;
    更新阶段
&lt;/div&gt;
&lt;/h5&gt;
&lt;p&gt;在更新阶段，利用新的测量数据对预测状态进行修正。首先计算卡尔曼增益：&lt;/p&gt;
$$
\[ 
K_k = P_{k|k-1} H^T (H P_{k|k-1} H^T + R)^{-1} 
\]
$$
&lt;p&gt;然后更新状态估计：&lt;/p&gt;
$$
\[ 
\hat{x}_{k|k} = \hat{x}_{k|k-1} + K_k (z_k - H \hat{x}_{k|k-1}) 
\]
$$
&lt;p&gt;最后更新状态协方差：&lt;/p&gt;
$$
\[ 
P_{k|k} = (I - K_k H) P_{k|k-1} 
\]
$$
&lt;h3 id=&#34;3-卡尔曼滤波器在目标跟踪中的应用&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#3-%e5%8d%a1%e5%b0%94%e6%9b%bc%e6%bb%a4%e6%b3%a2%e5%99%a8%e5%9c%a8%e7%9b%ae%e6%a0%87%e8%b7%9f%e8%b8%aa%e4%b8%ad%e7%9a%84%e5%ba%94%e7%94%a8&#34;&gt;
        ##
    &lt;/a&gt;
    3. 卡尔曼滤波器在目标跟踪中的应用
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;在目标跟踪中，卡尔曼滤波器可以用来估计目标的位置信息（例如位置、速度）。假设目标在二维平面上运动，我们可以定义状态向量为：&lt;/p&gt;
$$
\[ 
x_k = \begin{bmatrix} x \\ y \\ a \\ h \\ v_x \\ v_y \\ v_a \\ v_h \end{bmatrix} 
\]
$$
&lt;p&gt;其中 \( x \) 和 \( y \) 是目标的框的位置，\( a \) 和 \( h \) 是目标的大小比例（如宽高比），\( $v_x$ \) 和 \( $v_y$ \) 是目标框的运动速度，\( $v_a$ \) 和 \( $v_h$ \) 是目标框的大小比例变化速度。状态转移矩阵 \( A \) 和测量矩阵 \( H \) 可以定义为：&lt;/p&gt;
&lt;h4 id=&#34;状态转移矩阵--a-&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e7%8a%b6%e6%80%81%e8%bd%ac%e7%a7%bb%e7%9f%a9%e9%98%b5--a-&#34;&gt;
        ###
    &lt;/a&gt;
    状态转移矩阵 \( A \)：
&lt;/div&gt;
&lt;/h4&gt;
$$
\[ 
A = \begin{matrix} 
1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 
\end{matrix} 
\]
$$
&lt;h4 id=&#34;测量矩阵--h-&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e6%b5%8b%e9%87%8f%e7%9f%a9%e9%98%b5--h-&#34;&gt;
        ###
    &lt;/a&gt;
    测量矩阵 \( H \)：
&lt;/div&gt;
&lt;/h4&gt;
$$
\[ 
H = \begin{bmatrix} 
1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 
\end{bmatrix} 
\]
$$
&lt;h4 id=&#34;过程噪声协方差矩阵--q-&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e8%bf%87%e7%a8%8b%e5%99%aa%e5%a3%b0%e5%8d%8f%e6%96%b9%e5%b7%ae%e7%9f%a9%e9%98%b5--q-&#34;&gt;
        ###
    &lt;/a&gt;
    过程噪声协方差矩阵 \( Q \):
&lt;/div&gt;
&lt;/h4&gt;
$$
\[ 
Q = \text{np.eye}(8) * 0.1 
\]
$$
&lt;h4 id=&#34;预测协方差矩阵&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e9%a2%84%e6%b5%8b%e5%8d%8f%e6%96%b9%e5%b7%ae%e7%9f%a9%e9%98%b5&#34;&gt;
        ###
    &lt;/a&gt;
    预测协方差矩阵：
&lt;/div&gt;
&lt;/h4&gt;
$$
\[ 
P = A P_{k-1|k-1} A^T + Q 
\]
$$
&lt;h3 id=&#34;4-实例分析&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#4-%e5%ae%9e%e4%be%8b%e5%88%86%e6%9e%90&#34;&gt;
        ##
    &lt;/a&gt;
    4. 实例分析
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;假设我们在每个时刻测量到目标的位置 \( ($x_k$, $y_k$) \)，利用上述卡尔曼滤波算法可以对目标的位置和速度进行估计和跟踪。&lt;/p&gt;
&lt;h4 id=&#34;41-初始化&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#41-%e5%88%9d%e5%a7%8b%e5%8c%96&#34;&gt;
        ###
    &lt;/a&gt;
    4.1 初始化
&lt;/div&gt;
&lt;/h4&gt;
&lt;p&gt;初始状态估计：&lt;/p&gt;
$$
\[ 
\hat{x}_0 = \begin{bmatrix} x_0 \\\ y_0 \\\ a_0 \\\ h_0 \\\ v_{x0} \\\ v_{y0} \\\ v_{a0} \\\ v_{h0} \end{bmatrix} 
\]
$$
&lt;p&gt;初始状态协方差：&lt;/p&gt;
$$
\[ 
P_0 = \begin{bmatrix} 
\sigma_x^2 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; \sigma_y^2 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; \sigma_a^2 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; \sigma_h^2 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; \sigma_{vx}^2 &amp; 0 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \sigma_{vy}^2 &amp; 0 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \sigma_{va}^2 &amp; 0 \\\ 
0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \sigma_{vh}^2 
\end{bmatrix} 
\]
$$
&lt;h4 id=&#34;42-迭代过程&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#42-%e8%bf%ad%e4%bb%a3%e8%bf%87%e7%a8%8b&#34;&gt;
        ###
    &lt;/a&gt;
    4.2 迭代过程
&lt;/div&gt;
&lt;/h4&gt;
&lt;p&gt;在每个时间步，通过上述预测和更新步骤迭代计算得到目标的状态估计和协方差。&lt;/p&gt;
&lt;h3 id=&#34;5-结论&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#5-%e7%bb%93%e8%ae%ba&#34;&gt;
        ##
    &lt;/a&gt;
    5. 结论
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;卡尔曼滤波器在目标跟踪中的应用非常广泛，特别是在噪声环境中具有良好的鲁棒性。通过结合系统模型和测量数据，卡尔曼滤波器能够有效地估计和跟踪目标的状态。理解其数学原理和实现细节，对于实际工程应用具有重要意义。&lt;/p&gt;
&lt;p&gt;代码： &lt;a href=&#34;https://github.com/singleye/object_tracking_kalman_filter&#34;&gt;https://github.com/singleye/object_tracking_kalman_filter&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
