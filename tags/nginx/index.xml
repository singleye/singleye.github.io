<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on 好奇心是探索未知世界的钥匙</title>
    <link>https://www.singleye.net/tags/nginx/</link>
    <description>Recent content in Nginx on 好奇心是探索未知世界的钥匙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 23 Dec 2017 19:41:39 +0800</lastBuildDate>
    
	<atom:link href="https://www.singleye.net/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx Static</title>
      <link>https://www.singleye.net/2017/12/nginx-static/</link>
      <pubDate>Sat, 23 Dec 2017 19:41:39 +0800</pubDate>
      
      <guid>https://www.singleye.net/2017/12/nginx-static/</guid>
      <description>nginx配置静态文件服务器
搭建文件服务器 要点就是root目录,会自动指向索引文件 如： index, index.html等
server { client_max_body_size 4G; listen 80; ## listen for ipv4; this line is default and implied server_name static.test.sdk.iwplay.com.tw; root /home/mini/Sync; location / { } }  建立索引 建立目录索引也同样如此，不要带索引名称之类的文件，否则会直接显示文件，而不是目录
server { client_max_body_size 4G; listen 80; ## listen for ipv4; this line is default and implied server_name static.test.sdk.iwplay.com.tw; root /home/mini/Sync; location / { autoindex on; //显示索引 autoindex_exact_size on; //显示大小 autoindex_localtime on; //显示时间 } }  设置密码 搭建文件服务器有时候不想让别人任意访问，想做成一个私有的该怎么办呢，这个时候我们可以用到nginx自带的认证模块。 同样关键的是auth_basic/auth_basic_user_file字段</description>
    </item>
    
    <item>
      <title>使用nginx搭建hugo静态blog服务</title>
      <link>https://www.singleye.net/2017/01/%E4%BD%BF%E7%94%A8nginx%E6%90%AD%E5%BB%BAhugo%E9%9D%99%E6%80%81blog%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Tue, 10 Jan 2017 09:16:36 +0000</pubDate>
      
      <guid>https://www.singleye.net/2017/01/%E4%BD%BF%E7%94%A8nginx%E6%90%AD%E5%BB%BAhugo%E9%9D%99%E6%80%81blog%E6%9C%8D%E5%8A%A1/</guid>
      <description>之前使用过wordpress搭建过内容管理网站，但是运行环境搭建有些复杂而且页面内容创建需要不够方便，后来关注到静态页面网站框架，发现可以使用markdown进行内容编辑，这对于程序猿来说简直再有好不过了！
简单检索了一下静态内容管理的有很多实现，Ruby的Jekyll，Python的Sphinx doc，Go的Hugo，因为最近在学习Go所以决定搭建一个Hugo来研究下。
使用源码部署hugo 部署golang  $ yum install golang  下载hugo源代码  $ wget https://github.com/spf13/hugo/archive/v0.18.1.tar.gz $ tar xf v0.18.1.tar.gz $ cd hugo-0.18.1/ $ export GOPATH=/usr/local/go $ go get -v github.com/spf13/hugo  hugo的基本使用 创建项目  $ /usr/local/go/bin/hugo new site myblogs  创建post  $ /usr/local/go/bin/hugo new post/first.md  使用themes  $ cd themes/ $ git clone https://github.com/kakawait/hugo-tranquilpeak-theme.git $ cp hugo-tranquilpeak-theme/exampleSite/* ..  构造页面  $ cd content $ mkdir archives $ touch archives/_index.</description>
    </item>
    
  </channel>
</rss>