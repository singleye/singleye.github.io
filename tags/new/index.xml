<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>New on 好奇心是探索未知世界的钥匙</title>
    <link>https://www.singleye.net/tags/new/</link>
    <description>Recent content in New on 好奇心是探索未知世界的钥匙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 08 Nov 2017 10:58:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.singleye.net/tags/new/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言中new与make的比较</title>
      <link>https://www.singleye.net/2017/11/go%E8%AF%AD%E8%A8%80%E4%B8%ADnew%E4%B8%8Emake%E7%9A%84%E6%AF%94%E8%BE%83/</link>
      <pubDate>Wed, 08 Nov 2017 10:58:00 +0000</pubDate>
      
      <guid>https://www.singleye.net/2017/11/go%E8%AF%AD%E8%A8%80%E4%B8%ADnew%E4%B8%8Emake%E7%9A%84%E6%AF%94%E8%BE%83/</guid>
      <description>go语言new()与make()的区别对于初入golang的开发者来说是个容易混淆的点，这里尝试对这两个的区别做一些总结。
官方文档 首先查找官方文档中的描述，首先是关于&amp;rsquo;new()&amp;lsquo;的：
1 2 3 4  // The new built-in function allocates memory. The first argument is a type, // not a value, and the value returned is a pointer to a newly // allocated zero value of that type. func new(Type) *Type   关于&amp;rsquo;make()&amp;rsquo;:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  // The make built-in function allocates and initializes an object of type // slice, map, or chan (only).</description>
    </item>
    
  </channel>
</rss>