<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slice on 好奇心是探索未知世界的钥匙</title>
    <link>https://www.singleye.net/tags/slice/</link>
    <description>Recent content in Slice on 好奇心是探索未知世界的钥匙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Nov 2017 14:25:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.singleye.net/tags/slice/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GO语言中array与slice的比较</title>
      <link>https://www.singleye.net/2017/11/go%E8%AF%AD%E8%A8%80%E4%B8%ADarray%E4%B8%8Eslice%E7%9A%84%E6%AF%94%E8%BE%83/</link>
      <pubDate>Tue, 07 Nov 2017 14:25:00 +0000</pubDate>
      
      <guid>https://www.singleye.net/2017/11/go%E8%AF%AD%E8%A8%80%E4%B8%ADarray%E4%B8%8Eslice%E7%9A%84%E6%AF%94%E8%BE%83/</guid>
      <description>go语言中array与slice的区别总结
    数组array 切片slice 区别     声明定义 var arrayName [arrayLength] dataType var sliceName [] dataType 声明数组需要长度信息，定义slice时不需要   初始化 var arrayName = [arrayLength] dataType {Val1, &amp;hellip; Valn} var arrayName = [&amp;hellip;] dataType {Val1, &amp;hellip; Valn} var sliceName = [] dataType {Val1, &amp;hellip; Valn}var slice [] type = make([] type, length)通过数组初始化：slice := array[:]slice := array[startIndex:endIndex] 初始化数组时需要长度信息，初始化slice时不需要   取值 通过索引index取相应的元素值:arrayName[index] 通过index取元素值：slice[index] 返回一个新切片值: slice[startIndex:endIndex] slice取值除了可以获取一个元素的值外，还可以获取一个新的切片   赋值 元素赋值：array[index] = value  数组赋值： var new_array = array  new_array := array 元素赋值： slice[index] = value 将单个单个值append()到slice中，返回的新slice长度会增加:slice = append(slice, v1, v2&amp;hellip;) 将一个slice copy()到另一个slice中，目标slice长度不变，最多copy截止到目标元素最后一个元素： copy(slice1, slice2)  copy(slice1[si:], slice2) 数组支持简单的单元素或者整体赋值，slice则支持更加精细度的赋值   扩展 不支持 append()，新的slice length和capacity均发生变化： var slice = []int {1, 2, 3, 4, 5}slice = append(slice, 1, 2)fmt.</description>
    </item>
    
  </channel>
</rss>