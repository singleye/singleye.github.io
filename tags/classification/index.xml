<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Classification on singleye</title>
    <link>/tags/classification/</link>
    <description>singleye (Classification)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>**Email:** [singleye512@gmail.com](mailto:singleye512@gmail.com) (singleye)</managingEditor>
    <webMaster>**Email:** [singleye512@gmail.com](mailto:singleye512@gmail.com) (singleye)</webMaster>
    <lastBuildDate>Mon, 15 Apr 2019 17:04:37 +0800</lastBuildDate>
    
    <atom:link href="/tags/classification/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>机器学习 - 决策树</title>
      <link>/2019/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%86%B3%E7%AD%96%E6%A0%91/</link>
      <pubDate>Mon, 15 Apr 2019 17:04:37 +0800</pubDate>
      <author>**Email:** [singleye512@gmail.com](mailto:singleye512@gmail.com) (singleye)</author>
      <guid>/2019/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%86%B3%E7%AD%96%E6%A0%91/</guid>
      <description>&lt;!--toc--&gt;
&lt;h1 id=&#34;机器学习-决策树&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e6%9c%ba%e5%99%a8%e5%ad%a6%e4%b9%a0-%e5%86%b3%e7%ad%96%e6%a0%91&#34;&gt;
        ##
    &lt;/a&gt;
    机器学习-决策树
&lt;/div&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;1什么是问题树&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#1%e4%bb%80%e4%b9%88%e6%98%af%e9%97%ae%e9%a2%98%e6%a0%91&#34;&gt;
        #
    &lt;/a&gt;
    1.什么是问题树？
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;请思考以下场景&lt;/p&gt;
&lt;h3 id=&#34;11玩过猜字游戏吗&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#11%e7%8e%a9%e8%bf%87%e7%8c%9c%e5%ad%97%e6%b8%b8%e6%88%8f%e5%90%97&#34;&gt;
        ##
    &lt;/a&gt;
    1.1.玩过猜字游戏吗？
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;12如何通过几个问题区分猫狗鸡鸭&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#12%e5%a6%82%e4%bd%95%e9%80%9a%e8%bf%87%e5%87%a0%e4%b8%aa%e9%97%ae%e9%a2%98%e5%8c%ba%e5%88%86%e7%8c%ab%e7%8b%97%e9%b8%a1%e9%b8%ad&#34;&gt;
        ##
    &lt;/a&gt;
    1.2.如何通过几个问题区分“猫狗鸡鸭”？
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/2.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;121他们的特征是什么&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#121%e4%bb%96%e4%bb%ac%e7%9a%84%e7%89%b9%e5%be%81%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;
        ###
    &lt;/a&gt;
    1.2.1.他们的特征是什么？
&lt;/div&gt;
&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;物种&lt;/th&gt;
&lt;th&gt;腿的数量&lt;/th&gt;
&lt;th&gt;有没有脚蹼&lt;/th&gt;
&lt;th&gt;喙的形状&lt;/th&gt;
&lt;th&gt;会不会游泳&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;猫&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;不会&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;狗&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;会&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;鸡&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;尖&lt;/td&gt;
&lt;td&gt;不会&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;鸭&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;扁&lt;/td&gt;
&lt;td&gt;会&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;数据的表示方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类别：猫、狗、鸡、鸭&lt;/li&gt;
&lt;li&gt;特征：腿的数量、有没有脚蹼、喙的形状，会不会游泳&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;122以下是一种区分方法&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#122%e4%bb%a5%e4%b8%8b%e6%98%af%e4%b8%80%e7%a7%8d%e5%8c%ba%e5%88%86%e6%96%b9%e6%b3%95&#34;&gt;
        ###
    &lt;/a&gt;
    1.2.2.以下是一种区分方法
&lt;/div&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/6.png&#34; alt=&#34;6&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考1：以上是不是唯一的方法？&lt;/strong&gt;
&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/7.png&#34; alt=&#34;7&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考2：哪种判定方式更好？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考3：如何更有效的区分？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果某个特征区分问题更有效？&lt;/li&gt;
&lt;li&gt;怎么判断问题更有效？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2为什么需要决策树&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#2%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%86%b3%e7%ad%96%e6%a0%91&#34;&gt;
        #
    &lt;/a&gt;
    2.为什么需要决策树
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;此刻你可能会想到：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 寻找关键性问题！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 什么是关键性问题？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 怎么寻找关键性问题？&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;21理论依据是什么&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#21%e7%90%86%e8%ae%ba%e4%be%9d%e6%8d%ae%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;
        ##
    &lt;/a&gt;
    2.1.理论依据是什么？
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;香农&amp;quot;提出信息论，其中对信息的度量成为香农熵，简称“熵(Entropy)”&lt;/p&gt;
&lt;p&gt;在分类问题中，假设存在类别集合为  $ (X_1, X_2, &amp;hellip; X_n) $ ，将类别 $ X_i $ 的信息定义为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$ l(X_i) = -log(P(X_i))$ , 其中 $ P(X_i)$为 $X_i $的概率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;熵：信息的数学期望值： $ H= -\sum_{i=1}^n P(X_i) log(P(X_i))$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;思考4：怎么理解熵？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信息量越大，熵越小&lt;/li&gt;
&lt;li&gt;信息量越小，熵越大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/5.png&#34; alt=&#34;5&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考5：为什么使用对数表示信息？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概率 vs 信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概率越大，信息量越小&lt;/li&gt;
&lt;li&gt;概率越小，信息量越大&lt;/li&gt;
&lt;li&gt;多个事件同时发生的概率是多个事件发生概率相乘，总信息量是多个事件信息量相加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;练习1：给定以下数据集，写出熵的计算方法&lt;/strong&gt;&lt;/p&gt;
$$ H= -\sum_{i=1}^n P(X_i) log(P(X_i)) $$
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;from&lt;/span&gt; math &lt;span style=&#34;color:#ff6ac1&#34;&gt;import&lt;/span&gt; log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#57c7ff&#34;&gt;create_dataset&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    features &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;legs&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;flippers&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;beak&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;swim&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dataset &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Yes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Yes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Sharp&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Sharp&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ff9f43&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Flat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;No&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;duck&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;return&lt;/span&gt; dataset, features
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#57c7ff&#34;&gt;calc_entropy&lt;/span&gt;(dataset):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    count &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;len&lt;/span&gt;(dataset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    class_counter &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; vector &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; dataset:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cls &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; vector[&lt;span style=&#34;color:#ff6ac1&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        class_counter[cls] &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; class_counter&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;get(cls, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#ff6ac1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    entropy &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff9f43&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; class_counter&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prob &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;float&lt;/span&gt;(class_counter[key])&lt;span style=&#34;color:#ff6ac1&#34;&gt;/&lt;/span&gt;count
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        entropy &lt;span style=&#34;color:#ff6ac1&#34;&gt;-=&lt;/span&gt; prob &lt;span style=&#34;color:#ff6ac1&#34;&gt;*&lt;/span&gt; log(prob)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;return&lt;/span&gt; entropy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataset, features &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; create_dataset()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;entropy &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; calc_entropy(dataset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Entropy: &lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;format(entropy))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Entropy: 1.3208883431493221
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3怎么构建决策树&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#3%e6%80%8e%e4%b9%88%e6%9e%84%e5%bb%ba%e5%86%b3%e7%ad%96%e6%a0%91&#34;&gt;
        #
    &lt;/a&gt;
    3.怎么构建决策树
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;核心问题：如何通过划分数据集计算信息量的提升来找到最有效的数据特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;练习2：重新划分数据集，将符合指定特征值的数据提取出来组合新的数据集合&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#57c7ff&#34;&gt;split_dataset&lt;/span&gt;(dataset, feature, value):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    new_dataset &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; data &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; dataset:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff6ac1&#34;&gt;if&lt;/span&gt; data[feature] &lt;span style=&#34;color:#ff6ac1&#34;&gt;==&lt;/span&gt; value:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            new_data &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; data[:feature]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            new_data&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;extend(data[feature&lt;span style=&#34;color:#ff6ac1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;:])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            new_dataset&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;append(new_data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;return&lt;/span&gt; new_dataset
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;小实验1：以下将有脚蹼和没有脚蹼的数据集划分出来&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;feature &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; features&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;flippers&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with_flipper_dataset &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; split_dataset(dataset, feature, &lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Dataset with flippers:&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(with_flipper_dataset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Dataset without flippers:&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with_flipper_dataset &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; split_dataset(dataset, feature, &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(with_flipper_dataset)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Dataset with flippers:
[[2, &#39;Flat&#39;, &#39;No&#39;, &#39;duck&#39;]]
Dataset without flippers:
[[4, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [4, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [4, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [4, &#39;No&#39;, &#39;Yes&#39;, &#39;dog&#39;], [4, &#39;No&#39;, &#39;Yes&#39;, &#39;dog&#39;], [2, &#39;Sharp&#39;, &#39;No&#39;, &#39;chicken&#39;], [2, &#39;Sharp&#39;, &#39;No&#39;, &#39;chicken&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;思考6：怎么表示最好的特征？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信息增益：通过观察信息熵的变化求得&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#57c7ff&#34;&gt;select_best_feature&lt;/span&gt;(dataset, features):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    feature_count &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;len&lt;/span&gt;(dataset[&lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;])&lt;span style=&#34;color:#ff6ac1&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    current_entropy &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; calc_entropy(dataset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    feature_selected &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff6ac1&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    best_entropy_gain &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff9f43&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dataset_size &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;len&lt;/span&gt;(dataset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sub_datasets &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sub_features &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;range&lt;/span&gt;(feature_count):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        feature_values &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;set&lt;/span&gt;([vector[i] &lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; vector &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; dataset])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        subset_entropy &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff9f43&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;  Calculating entropy by splitting dataset with feature[&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{0}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;format(features[i]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        subsets &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; value &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; feature_values:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;    Splitting dataset with feature[&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{0}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;]==&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{1}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;format(features[i], value))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            subset &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; split_dataset(dataset, i, value)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            subsets[value] &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; subset
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            prob &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ff5c57&#34;&gt;len&lt;/span&gt;(subset)&lt;span style=&#34;color:#ff6ac1&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ff9f43&#34;&gt;1.0&lt;/span&gt;)&lt;span style=&#34;color:#ff6ac1&#34;&gt;/&lt;/span&gt;dataset_size
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            subset_entropy &lt;span style=&#34;color:#ff6ac1&#34;&gt;+=&lt;/span&gt; prob &lt;span style=&#34;color:#ff6ac1&#34;&gt;*&lt;/span&gt; calc_entropy(subset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;      Subset:&amp;#39;&lt;/span&gt;, subset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;      Entropy:&amp;#39;&lt;/span&gt;, subset_entropy)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        entropy_gain &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; current_entropy&lt;span style=&#34;color:#ff6ac1&#34;&gt;-&lt;/span&gt;subset_entropy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;    Entropy gain: &lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;format(entropy_gain))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff6ac1&#34;&gt;if&lt;/span&gt; best_entropy_gain &lt;span style=&#34;color:#ff6ac1&#34;&gt;&amp;lt;&lt;/span&gt; entropy_gain:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            best_entropy_gain &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; entropy_gain
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            feature_selected &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sub_datasets &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; subsets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sub_features &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; features[:feature_selected]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sub_features&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;extend(features[feature_selected&lt;span style=&#34;color:#ff6ac1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ff9f43&#34;&gt;1&lt;/span&gt;:])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff6ac1&#34;&gt;return&lt;/span&gt; feature_selected, sub_datasets, sub_features
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;小实验2：请在数据全集上运行计算出最优数据特征&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;best_feature, sub_datasets, sub_features &lt;span style=&#34;color:#ff6ac1&#34;&gt;=&lt;/span&gt; select_best_feature(dataset, features)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Best feature: &lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;, name: &lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;format(best_feature, features[best_feature]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;for&lt;/span&gt; feature_value &lt;span style=&#34;color:#ff6ac1&#34;&gt;in&lt;/span&gt; sub_datasets&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Sub dataset with feature[&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;]==&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;.&lt;/span&gt;format(features[best_feature], feature_value))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(sub_datasets[feature_value])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff5c57&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#39;Sub features: &amp;#39;&lt;/span&gt;, sub_features)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  Calculating entropy by splitting dataset with feature[legs]
    Splitting dataset with feature[legs]==2
      Subset: [[0, &#39;Sharp&#39;, &#39;No&#39;, &#39;chicken&#39;], [0, &#39;Sharp&#39;, &#39;No&#39;, &#39;chicken&#39;], [1, &#39;Flat&#39;, &#39;No&#39;, &#39;duck&#39;]]
      Entropy: 0.2386928131105548
    Splitting dataset with feature[legs]==4
      Subset: [[0, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [0, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [0, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [0, &#39;No&#39;, &#39;Yes&#39;, &#39;dog&#39;], [0, &#39;No&#39;, &#39;Yes&#39;, &#39;dog&#39;]]
      Entropy: 0.6593251049913401
    Entropy gain: 0.661563238157982
  Calculating entropy by splitting dataset with feature[flippers]
    Splitting dataset with feature[flippers]==0
      Subset: [[4, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [4, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [4, &#39;No&#39;, &#39;No&#39;, &#39;cat&#39;], [4, &#39;No&#39;, &#39;Yes&#39;, &#39;dog&#39;], [4, &#39;No&#39;, &#39;Yes&#39;, &#39;dog&#39;], [2, &#39;Sharp&#39;, &#39;No&#39;, &#39;chicken&#39;], [2, &#39;Sharp&#39;, &#39;No&#39;, &#39;chicken&#39;]]
      Entropy: 0.9441181818928854
    Splitting dataset with feature[flippers]==1
      Subset: [[2, &#39;Flat&#39;, &#39;No&#39;, &#39;duck&#39;]]
      Entropy: 0.9441181818928854
    Entropy gain: 0.3767701612564367
  Calculating entropy by splitting dataset with feature[beak]
    Splitting dataset with feature[beak]==No
      Subset: [[4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;Yes&#39;, &#39;dog&#39;], [4, 0, &#39;Yes&#39;, &#39;dog&#39;]]
      Entropy: 0.4206322918807853
    Splitting dataset with feature[beak]==Flat
      Subset: [[2, 1, &#39;No&#39;, &#39;duck&#39;]]
      Entropy: 0.4206322918807853
    Splitting dataset with feature[beak]==Sharp
      Subset: [[2, 0, &#39;No&#39;, &#39;chicken&#39;], [2, 0, &#39;No&#39;, &#39;chicken&#39;]]
      Entropy: 0.4206322918807853
    Entropy gain: 0.9002560512685368
  Calculating entropy by splitting dataset with feature[swim]
    Splitting dataset with feature[swim]==No
      Subset: [[4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;No&#39;, &#39;cat&#39;], [2, 0, &#39;Sharp&#39;, &#39;chicken&#39;], [2, 0, &#39;Sharp&#39;, &#39;chicken&#39;], [2, 1, &#39;Flat&#39;, &#39;duck&#39;]]
      Entropy: 0.7585531985305136
    Splitting dataset with feature[swim]==Yes
      Subset: [[4, 0, &#39;No&#39;, &#39;dog&#39;], [4, 0, &#39;No&#39;, &#39;dog&#39;]]
      Entropy: 0.7585531985305136
    Entropy gain: 0.5623351446188085
Best feature: 2, name: beak
Sub dataset with feature[beak]==No
[[4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;No&#39;, &#39;cat&#39;], [4, 0, &#39;Yes&#39;, &#39;dog&#39;], [4, 0, &#39;Yes&#39;, &#39;dog&#39;]]
Sub features:  [&#39;legs&#39;, &#39;flippers&#39;, &#39;swim&#39;]
Sub dataset with feature[beak]==Flat
[[2, 1, &#39;No&#39;, &#39;duck&#39;]]
Sub features:  [&#39;legs&#39;, &#39;flippers&#39;, &#39;swim&#39;]
Sub dataset with feature[beak]==Sharp
[[2, 0, &#39;No&#39;, &#39;chicken&#39;], [2, 0, &#39;No&#39;, &#39;chicken&#39;]]
Sub features:  [&#39;legs&#39;, &#39;flippers&#39;, &#39;swim&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;思考7：如果改动数据集会出现什么情况？&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;决策树算法&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e5%86%b3%e7%ad%96%e6%a0%91%e7%ae%97%e6%b3%95&#34;&gt;
        #
    &lt;/a&gt;
    决策树算法
&lt;/div&gt;
&lt;/h2&gt;
&lt;h4 id=&#34;算法描述&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e7%ae%97%e6%b3%95%e6%8f%8f%e8%bf%b0&#34;&gt;
        ###
    &lt;/a&gt;
    算法描述：
&lt;/div&gt;
&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;当前数据集是否是确定的某个类型的数据，如果是则不用再对该数据集进行分类&lt;/li&gt;
&lt;li&gt;在当前数据集上选择最好的特征，通过使用这个特征区分的子数据集拥有最好的信息&lt;/li&gt;
&lt;li&gt;对各子数据集重复进行上述计算&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;伪代码&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e4%bc%aa%e4%bb%a3%e7%a0%81&#34;&gt;
        ###
    &lt;/a&gt;
    伪代码：
&lt;/div&gt;
&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Function CreateTree
    IF 数据集不用再分割 THEN return 该数据集类别
    ELSE
        寻找待分类数据的最好特征
        划分子数据集
        创建分支节点
        for 每个划分的子数据集
            branchPoint = CreateTree
        return 分支节点
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;大家动手实现上面的算法，输出一棵树&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;4其他思考&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#4%e5%85%b6%e4%bb%96%e6%80%9d%e8%80%83&#34;&gt;
        ##
    &lt;/a&gt;
    4.其他思考
&lt;/div&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;思考8：数据集有什么样的影响？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考9：数据特征有什么样的影响？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# &amp;#39;meow&amp;#39;:0, &amp;#39;wong&amp;#39;:1, &amp;#39;googooda&amp;#39;:2, &amp;#39;ga&amp;#39;:3

def create_dataset():
    features = [&amp;#39;legs&amp;#39;, &amp;#39;flippers&amp;#39;, &amp;#39;voice&amp;#39;]
    dataset = [
        [4, 0, 0, &amp;#39;cat&amp;#39;],
        [4, 0, 0, &amp;#39;cat&amp;#39;],
        [4, 0, 0, &amp;#39;cat&amp;#39;],
        [4, 0, 1, &amp;#39;dog&amp;#39;],
        [4, 0, 1, &amp;#39;dog&amp;#39;],
        [2, 0, 2, &amp;#39;chicken&amp;#39;],
        [2, 0, 2, &amp;#39;chicken&amp;#39;],
        [2, 1, 3, &amp;#39;duck&amp;#39;]
    ]
    return dataset, features
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;物种&lt;/th&gt;
&lt;th&gt;腿的数量&lt;/th&gt;
&lt;th&gt;有没有脚蹼&lt;/th&gt;
&lt;th&gt;叫声&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;猫&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;喵喵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;狗&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;旺旺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;鸡&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;td&gt;咯咯哒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;鸭&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;嘎嘎&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一种区分方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考10：有没有其他方法？&lt;/strong&gt;
&lt;img src=&#34;https://singleye-public-read.oss-cn-shanghai.aliyuncs.com/singleye.net/static/2019/04/decision-tree/4.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思考11：如果使用前面的算法会得出什么样的结果呢？&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
